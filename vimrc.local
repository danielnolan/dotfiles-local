" set hidden 
set hidden

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" realitive line numbers
set relativenumber

" zoom a vim pane, <C-w>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

" map <leader>s to trim white space
map <leader>ws :%s/\s\+$//e<CR>

" map <leader>c to close buffer but leave window intact
nmap <leader>c :ene<CR>:bw #<CR>

if has('nvim')
  tnoremap <Esc> <C-\><C-n>
  tnoremap <A-[> <Esc>
endif

" Complete terms from all buffers
set complete=.,w,b,u,t,i

" Persistent undos
set undodir=~/.vim/backup
set undofile

" Update time
set updatetime=1500

" Color scheme
set background=dark
colorscheme solarized

" Highlight find and replace
if has("nvim")
  set inccommand=split
endif

" Plugin settings - start

" open CtrlP in buffer mode
nnoremap <leader>b :CtrlPBuffer<CR>

" Airline settings
" set theme
let g:airline_theme='solarized'
" use powerline fonts
let g:airline_powerline_fonts = 1

" Gitgutter settings
let g:gitgutter_escape_grep = 1
highlight clear SignColumn

" Neoterm settings
let g:neoterm_autoinsert = 1
let g:neoterm_autoscroll = 1
let g:neoterm_default_mod = ":vert"

" Ultisnips settings
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" vim-go settings
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

let g:go_fmt_command = "goimports"

" vim-test settings
let test#strategy = "neoterm"

au FileType go nmap <leader>r <Plug>(go-run)

" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ 'mode': 'passive',
  \ 'active_filetypes': [],
  \ 'passive_filetypes': [] }
" Plugin settings - end
